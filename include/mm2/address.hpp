// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.

/// Address
///
/// \file   mm2/address.hpp
/// \author Vincent Hamp
/// \date   29/11/2022

#pragma once

#include <cstdint>

namespace mm2 {

using Address = uint8_t;

namespace detail {

inline constexpr std::array<Address, 256uz> address_table{
  0xAAu, 0xC0u, 0x80u, 0x30u, 0xF0u, 0xB0u, 0x20u, 0xE0u, 0xA0u, 0x0Cu, 0xCCu,
  0x8Cu, 0x3Cu, 0xFCu, 0xBCu, 0x2Cu, 0xECu, 0xACu, 0x08u, 0xC8u, 0x88u, 0x38u,
  0xF8u, 0xB8u, 0x28u, 0xE8u, 0xA8u, 0x03u, 0xC3u, 0x83u, 0x33u, 0xF3u, 0xB3u,
  0x23u, 0xE3u, 0xA3u, 0x0Fu, 0xCFu, 0x8Fu, 0x3Fu, 0xFFu, 0xBFu, 0x2Fu, 0xEFu,
  0xAFu, 0x0Bu, 0xCBu, 0x8Bu, 0x3Bu, 0xFBu, 0xBBu, 0x2Bu, 0xEBu, 0xABu, 0x02u,
  0xC2u, 0x82u, 0x32u, 0xF2u, 0xB2u, 0x22u, 0xE2u, 0xA2u, 0x0Eu, 0xCEu, 0x8Eu,
  0x3Eu, 0xFEu, 0xBEu, 0x2Eu, 0xEEu, 0xAEu, 0x0Au, 0xCAu, 0x8Au, 0x3Au, 0xFAu,
  0xBAu, 0x2Au, 0xEAu, 0x00u, 0x40u, 0x60u, 0x97u, 0x70u, 0x48u, 0x68u, 0x58u,
  0x78u, 0x44u, 0x64u, 0x54u, 0x74u, 0x4Cu, 0x6Cu, 0x5Cu, 0x7Cu, 0x42u, 0x62u,
  0x52u, 0x72u, 0x4Au, 0x6Au, 0x5Au, 0x7Au, 0x46u, 0x66u, 0x56u, 0x76u, 0x4Eu,
  0x6Eu, 0x5Eu, 0x7Eu, 0x41u, 0x61u, 0x51u, 0x71u, 0x49u, 0x69u, 0x59u, 0x79u,
  0x45u, 0x65u, 0x9Fu, 0x75u, 0x4Du, 0x6Du, 0x5Du, 0x7Du, 0x43u, 0x63u, 0x53u,
  0x73u, 0x4Bu, 0x6Bu, 0x5Bu, 0x7Bu, 0x47u, 0x67u, 0x57u, 0x77u, 0x4Fu, 0x6Fu,
  0x5Fu, 0x7Fu, 0x10u, 0x18u, 0x14u, 0x1Cu, 0x12u, 0x1Au, 0x16u, 0x1Eu, 0x11u,
  0x19u, 0x15u, 0x1Du, 0x13u, 0x1Bu, 0x17u, 0x1Fu, 0xD0u, 0xD8u, 0xD4u, 0xDCu,
  0xD2u, 0xDAu, 0xD6u, 0xDEu, 0xD1u, 0xD9u, 0xD5u, 0xDDu, 0xD3u, 0xDBu, 0xD7u,
  0xDFu, 0x90u, 0x98u, 0x94u, 0x9Cu, 0x92u, 0x9Au, 0x96u, 0x9Eu, 0x91u, 0x99u,
  0x95u, 0x9Du, 0x93u, 0x9Bu, 0x50u, 0x55u, 0x04u, 0x06u, 0x05u, 0x07u, 0xC4u,
  0xC6u, 0xC5u, 0xC7u, 0x84u, 0x86u, 0x85u, 0x87u, 0x34u, 0x36u, 0x35u, 0x37u,
  0xF4u, 0xF6u, 0xF5u, 0xF7u, 0xB4u, 0xB6u, 0xB5u, 0xB7u, 0x24u, 0x26u, 0x25u,
  0x27u, 0xE4u, 0xE6u, 0xE5u, 0xE7u, 0xA4u, 0xA6u, 0xA5u, 0xA7u, 0x01u, 0xC1u,
  0x81u, 0x31u, 0xF1u, 0xB1u, 0x21u, 0xE1u, 0xA1u, 0x0Du, 0xCDu, 0x8Du, 0x3Du,
  0xFDu, 0xBDu, 0x2Du, 0xEDu, 0xADu, 0x09u, 0xC9u, 0x89u, 0x39u, 0xF9u, 0xB9u,
  0x29u, 0xE9u, 0xA9u};

} // namespace detail

/// Decode address
///
/// \param  data          Data to decode
/// \retval Address       Address found
/// \retval std::nullopt  No address found
constexpr std::optional<Address> decode_address(uint8_t data) {
  for (auto i{0uz}; i < size(detail::address_table); ++i)
    if (data == detail::address_table[i]) return i;
  return std::nullopt;
}

/// Encode address
///
/// \param  addr  Address to encode
/// \return Data
constexpr uint8_t encode_address(Address addr) {
  return detail::address_table[addr];
}

} // namespace mm2